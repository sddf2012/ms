server:
  port: 8100

spring:
  application:
    name: system
  # 数据库配置
  datasource:
    # ---------------基本链接信息---------------------------
    url: jdbc:mysql://localhost:3306/ms_system?serverTimezone=UTC
    username: root
    password: root
    # -----------------初始化大小，最小，最大----------------------------
    initialSize: 1
    minIdle: 1
    maxActive: 32
    #是否在自动回收超时连接的时候打印连接的超时错误
    logAbandoned: true
    #是否自动回收超时连接
    removeAbandoned: true
    #超时时间(以秒数为单位)
    removeAbandonedTimeout: 60
    # 配置获取连接等待超时的时间(以毫秒为单位)
    maxWait: 1000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 6000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: SELECT 'OK'
    testWhileIdle: true
    testOnBorrow: false
    test-on-Return: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=3000
    # 合并多个DruidDataSource的监控数据
    # useGlobalDataSourceStat: true

  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

mybatis:
  type-aliases-package: com.my.goods.domain.entity
  mapper-locations: classpath:mapper/*Mapper.xml

swagger:
  api:
    title: goods api
    description: 商品模块api
    version: @project.version@





#  zipkin:
#    service:
#      name: ${spring.application.name}
#    sender:
#      type: web
#    base-url: http://localhost:9411
#  sleuth:
#    sampler:
#      percentage: 1.0

logging:
  level:
    root: info
    com.my.goods.repo: debug
  file:
    name: zzz/logfile/${spring.application.name}.log

management:
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
    lease-renewal-interval-in-seconds: 29
    lease-expiration-duration-in-seconds: 100
  client:
    service-url:
      defaultZone: http://localhost:7001/eureka


ribbon:
  eureka:
    enabled: true
  ReadTimeout: 1000
  ConnectTimeout: 2000
  MaxAutoRetries: 1 #同一台实例最大重试次数,不包括首次调用
  MaxAutoRetriesNextServer: 0 #重试负载均衡其他的实例最大重试次数,不包括首次调用
  OkToRetryOnAllOperations: false  #是否所有操作都重试

# 接口调用超时时间，默认是1秒
#hystrix:
#  threadpool:
#    default:
#      coreSize: 10 #并发执行的最大线程数，默认10
#      maxQueueSize: 200 #BlockingQueue的最大队列数
#      queueSizeRejectionThreshold: 150 #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
#  command:
#    default:
#      execution:
#        timeout:
#          enabled: true
#        isolation:
#          strategy: THREAD
#          semaphore:
#            maxConcurrentRequests: 1000
#          thread:
#            timeoutInMilliseconds: 2000
